service {
          ------||| Symbol table: 
          ------||| Done	|sym_type: variable	|type: html
          ------||| PrintString	|sym_type: variable	|type: html
          ------||| Scm1	|sym_type: schema	|type: schema
          ------||| Scm2	|sym_type: schema	|type: schema
          ------||| Scm3	|sym_type: schema	|type: schema
          ------||| ShowSchema1	|sym_type: variable	|type: html
          ------||| ShowSchema2	|sym_type: variable	|type: html
          ------||| ShowSchema3	|sym_type: variable	|type: html
          ------||| test1	|sym_type: session	|type: void
          ------||| test2	|sym_type: session	|type: void
          ------||| --------------
  const html ShowSchema1 = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| b	|sym_type: hole_tag	|type: html
          ------||| i	|sym_type: hole_tag	|type: html
          ------||| message	|sym_type: hole_tag	|type: html
          ------||| s	|sym_type: hole_tag	|type: html
          ------||| --------------
<html> <body>
    <[message]> b: <[b]>  i: <[i]>  s: <[s]>  </body> </html>;
  const html ShowSchema2 = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| b	|sym_type: hole_tag	|type: html
          ------||| i	|sym_type: hole_tag	|type: html
          ------||| message	|sym_type: hole_tag	|type: html
          ------||| --------------
<html> <body>
   <[message]>  b: <[b]>  i: <[i]>  </body> </html>;
  const html ShowSchema3 = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| b	|sym_type: hole_tag	|type: html
          ------||| message	|sym_type: hole_tag	|type: html
          ------||| s	|sym_type: hole_tag	|type: html
          ------||| --------------
<html> <body>
   <[message]>  b: <[b]>  s: <[s]>  </body> </html>;
  const html PrintString = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| message	|sym_type: hole_tag	|type: html
          ------||| --------------
<html> <body>
   <[message]>  </body> </html>;
  const html Done = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| --------------
<html> <body> Done! </body> </html>;
  schema Scm1 {
------- Symbols inside the schema: 
          ------||| Symbol table: 
          ------||| b	|sym_type: field	|type: bool
          ------||| i	|sym_type: field	|type: int
          ------||| s	|sym_type: field	|type: string
          ------||| --------------
    bool b;
    int i;
    string s;
  }
  schema Scm2 {
------- Symbols inside the schema: 
          ------||| Symbol table: 
          ------||| b	|sym_type: field	|type: bool
          ------||| i	|sym_type: field	|type: int
          ------||| --------------
    bool b;
    int i;
  }
  schema Scm3 {
------- Symbols inside the schema: 
          ------||| Symbol table: 
          ------||| b	|sym_type: field	|type: bool
          ------||| s	|sym_type: field	|type: string
          ------||| --------------
    bool b;
    string s;
  }
  session test1 () { 
          ------||| Symbol table: 
          ------||| t1	|sym_type: variable	|type: tuple
          ------||| t2	|sym_type: variable	|type: tuple
          ------||| t3	|sym_type: variable	|type: tuple
          ------||| --------------
          ------||| Done	|sym_type: variable	|type: html
          ------||| PrintString	|sym_type: variable	|type: html
          ------||| Scm1	|sym_type: schema	|type: schema
          ------||| Scm2	|sym_type: schema	|type: schema
          ------||| Scm3	|sym_type: schema	|type: schema
          ------||| ShowSchema1	|sym_type: variable	|type: html
          ------||| ShowSchema2	|sym_type: variable	|type: html
          ------||| ShowSchema3	|sym_type: variable	|type: html
          ------||| test1	|sym_type: session	|type: void
          ------||| --------------
    tuple Scm1 t1;
    tuple Scm2 t2;
    tuple Scm2 t3;
    t1 = tuple { b = true, 
      i = 87, 
      s = "foo"};
    show plug ShowSchema1[message = "t1 is: ", b = t1.b, i = t1.i, s = t1.s]    
;
    t2 = t1 \+ (b, i);
    show plug ShowSchema2[message = "t2 is: ", b = t2.b, i = t2.i]    
;
    t3 = t1 \- (s);
    show plug ShowSchema2[message = "t3 is: ", b = t3.b, i = t3.i]    
;
    exit Done;
  }
  session test2 () { 
          ------||| Symbol table: 
          ------||| g1	|sym_type: variable	|type: tuple
          ------||| g2	|sym_type: variable	|type: tuple
          ------||| g3	|sym_type: variable	|type: tuple
          ------||| --------------
          ------||| Done	|sym_type: variable	|type: html
          ------||| PrintString	|sym_type: variable	|type: html
          ------||| Scm1	|sym_type: schema	|type: schema
          ------||| Scm2	|sym_type: schema	|type: schema
          ------||| Scm3	|sym_type: schema	|type: schema
          ------||| ShowSchema1	|sym_type: variable	|type: html
          ------||| ShowSchema2	|sym_type: variable	|type: html
          ------||| ShowSchema3	|sym_type: variable	|type: html
          ------||| test1	|sym_type: session	|type: void
          ------||| test2	|sym_type: session	|type: void
          ------||| --------------
    tuple Scm1 g1;
    tuple Scm2 g2;
    tuple Scm3 g3;
    g2 = tuple { b = true, 
      i = 87};
    show plug ShowSchema2[message = "g2 is: ", b = g2.b, i = g2.i]    
;
    g3 = tuple { b = false, 
      s = "foo"};
    show plug ShowSchema3[message = "g3 is: ", b = g3.b, s = g3.s]    
;
    g1 = g2 << g3;
    show plug ShowSchema1[message = "g1 is: ", b = g1.b, i = g1.i, s = g1.s]    
;
    exit Done;
  }
}
