service {
          ------||| Symbol table: 
          ------||| Ans	|sym_type: variable	|type: int
          ------||| ByeBye	|sym_type: variable	|type: html
          ------||| Calculate	|sym_type: session	|type: void
          ------||| Return	|sym_type: variable	|type: html
          ------||| Setup	|sym_type: variable	|type: html
          ------||| --------------
  const html Setup = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| --------------
<html> <body>
    <h1>A Simple Plus Minus Calculator</h1>
    <p>
    Enter your operator (+ or -):
    <input name="operator" size=1 type="text">
    <p>
    Enter the first integer (-99 to 999):
    <input name="int1" size=3 type="text">
    <p>
    Enter the second integer (-99 to 999):
    <input name="int2" size=3 type="text">
  </body> </html>;
  const html Return = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| --------------
<html> <body>
    <h1>The Answer</h1>
    <p>
    <b>Your answer is : <[Ans]> </b>
    <p>
    Would you like to do another calculation (yes or no)?
    <input name="YorN" size=5 type="text">
  </body> </html>;
  const html ByeBye = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| --------------
<html> <body>
    <h1>Thank you for using this calculator</h1>
  </body> </html>;
  int Ans;
  session Calculate () { 
          ------||| Symbol table: 
          ------||| YorN	|sym_type: variable	|type: string
          ------||| int1	|sym_type: variable	|type: int
          ------||| int2	|sym_type: variable	|type: int
          ------||| operator	|sym_type: variable	|type: string
          ------||| --------------
          ------||| Ans	|sym_type: variable	|type: int
          ------||| ByeBye	|sym_type: variable	|type: html
          ------||| Calculate	|sym_type: session	|type: void
          ------||| Return	|sym_type: variable	|type: html
          ------||| Setup	|sym_type: variable	|type: html
          ------||| --------------
    string YorN;
    int int1;
    int int2;
    string operator;
    YorN = "";
    while (YorN != "no") { 
        show Setup receive [operator = operator, int1 = int1, int2 = int2];
        if (operator == "+")        Ans = int1 + int2;
        if (operator == "-")        Ans = int1 - int2;
        show plug Return[Ans = Ans] receive [YorN = YorN];
      }

    exit ByeBye;
  }
}
