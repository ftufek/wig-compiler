/* Produced errors: 
TYPES_DONT_MATCH(i = "a")
TYPES_DONT_MATCH(i = true)
TYPES_DONT_MATCH(i = false)
TYPES_DONT_MATCH(i = tuple { name = "asd"})
TYPES_DONT_MATCH(b = 1)
TYPES_DONT_MATCH(b = "a")
TYPES_DONT_MATCH(s = 1)
TYPES_DONT_MATCH(s = true)
TYPES_DONT_MATCH(s = false)
TYPES_DONT_MATCH(t.name = 2)
TYPES_DONT_MATCH(t.price = "b")
TYPES_DONT_MATCH(t.available = "s")
SHOULD_BE_BOOL(i = 2)
*/
service {
          ------||| Symbol table: 
          ------||| Item	|sym_type: schema	|type: schema
          ------||| a	|sym_type: variable	|type: html
          ------||| b	|sym_type: session	|type: void
          ------||| --------------
  const html a = 
 ---- Symbols inside the HTML
          ------||| Symbol table: 
          ------||| --------------
<html></html>;
  schema Item {
------- Symbols inside the schema: 
          ------||| Symbol table: 
          ------||| available	|sym_type: field	|type: bool
          ------||| name	|sym_type: field	|type: string
          ------||| price	|sym_type: field	|type: int
          ------||| --------------
    string name;
    int price;
    bool available;
  }
  session b () { 
          ------||| Symbol table: 
          ------||| b	|sym_type: variable	|type: bool
          ------||| i	|sym_type: variable	|type: int
          ------||| s	|sym_type: variable	|type: string
          ------||| t	|sym_type: variable	|type: tuple
          ------||| --------------
          ------||| Item	|sym_type: schema	|type: schema
          ------||| a	|sym_type: variable	|type: html
          ------||| b	|sym_type: session	|type: void
          ------||| --------------
    tuple Item t;
    int i;
    bool b;
    string s;
    t = tuple { name = "asd", 
      price = 3, 
      available = false};
    i = 2;
    i = "a";
    i = true;
    i = false;
    i = tuple { name = "asd"};
    b = 1;
    b = true;
    b = false;
    b = "a";
    s = 1;
    s = true;
    s = false;
    s = "a";
    t.name = "a";
    t.name = 2;
    t.price = "b";
    t.price = 3;
    t.available = "s";
    t.available = true;
    if (i = 2) { 
          ------||| Symbol table: 
          ------||| --------------
          ------||| b	|sym_type: variable	|type: bool
          ------||| i	|sym_type: variable	|type: int
          ------||| s	|sym_type: variable	|type: string
          ------||| t	|sym_type: variable	|type: tuple
          ------||| --------------
          ------||| Item	|sym_type: schema	|type: schema
          ------||| a	|sym_type: variable	|type: html
          ------||| b	|sym_type: session	|type: void
          ------||| --------------
    }
    exit a;
  }
}
